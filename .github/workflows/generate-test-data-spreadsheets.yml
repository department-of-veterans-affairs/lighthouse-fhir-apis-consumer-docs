name: Generate Test Data Spreadsheets
permissions: write-all
on:
  pull_request:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  synthetic-record-generator:
    name: Generate and Push Test Data Spreadsheets
    runs-on: ubuntu-latest
    steps:
      - name: Initialize Environment
        env:
          BUILD_TRIGGER: ${{ github.event_name }}
        run: |
          echo "BUILD_TRIGGER=${BUILD_TRIGGER}" | tee -a ${GITHUB_ENV}
          if [ "${BUILD_TRIGGER}" == "push" ] || [ "${BUILD_TRIGGER}" == "workflow_dispatch" ]
          then
            RELEASE="true"
          fi
          echo "RELEASE=${RELEASE:-false}" | tee -a ${GITHUB_ENV}
      - name: Install libreoffice
        run: |
          sudo apt-get update
          sudo apt install -y --no-install-recommends libreoffice
      - uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'corretto'
      - name: Setup Maven
        env:
          MAVEN_VERSION: '3.9.8'
        run: |
          echo "Installing Apache Maven ${MAVEN_VERSION}"
          MAVEN_URL="http://archive.apache.org/dist/maven/maven-3/${MAVEN_VERSION}/binaries/apache-maven-${MAVEN_VERSION}-bin.tar.gz"
          echo "Downloading maven from ${MAVEN_URL}"
          curl --silent \
            --location \
            --output /tmp/apache-maven-${MAVEN_VERSION}-bin.tar.gz \
            ${MAVEN_URL}
          mkdir --parents /home/runner/.local/bin
          MAVEN_DIR=/home/runner/.local
          echo "Installing maven in ${MAVEN_DIR}/bin"
          tar -x -C ${MAVEN_DIR} -f /tmp/apache-maven-${MAVEN_VERSION}-bin.tar.gz
          ln --symbolic ${MAVEN_DIR}/apache-maven-${MAVEN_VERSION}/bin/mvn /home/runner/.local/bin/mvn
          rm /tmp/apache-maven-${MAVEN_VERSION}-bin.tar.gz
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.BUILD_GITHUB_TOKEN }}
      - name: Get Synth Records Repo
        uses: actions/checkout@v4
        with:
          # The standard GITHUB_ACTOR cannot push back to a protected branch.
          # We must checkout with a god-mode user.
          token: ${{ secrets.BUILD_GITHUB_TOKEN }}
          repository: department-of-veterans-affairs/health-apis-datamart-synthetic-records
          ref: qa
          fetch-depth: 0
          path: synthetic-records
      - name: Initialize Maven
        run: |
          # Setup Environment
          echo "LIGHTHOUSE_SETTINGS=${GITHUB_WORKSPACE}/consumer-docs/.github/build/settings.xml" \
            | tee --append ${GITHUB_ENV}
      - name: Generate templated spreadsheets
        env:
          GITHUB_TOKEN: ${{ secrets.BUILD_GITHUB_TOKEN }}
          GITHUB_HEAD_REF: ${{ github.head_ref }}
          CHAPI_CCG_CLIENT_ID: ${{ secrets.CHAPI_CCG_CLIENT_ID }}
          CHAPI_CCG_CLIENT_SECRET: ${{ secrets.CHAPI_CCG_CLIENT_SECRET }}
          CHAPI_CCG_AUDIENCE: ${{ secrets.CHAPI_CCG_AUDIENCE }}
          CHAPI_CCG_OAUTH_URL: ${{ secrets.CHAPI_CCG_OAUTH_URL }}
        run: |
          for template in $(find .github/config/generate-test-data-spreadsheets -name '*.json.template' -type f)
          do
            apiName=$(basename "${template}" | sed 's/.json.template//')
            mkdir --parents "${apiName}"
            tmpOutputCsv="${apiName}/${apiName}-test-patient-data.csv"
            ./src/scripts/generate-test-patient-spreadsheets.sh "${template}" "${tmpOutputCsv}"
            libreoffice --headless --convert-to xlsx --outdir "$(dirname "${tmpOutputCsv}")" "${tmpOutputCsv}"
            git add "$(echo "${tmpOutputCsv}" | sed 's/\.csv$/.xlsx/')"
          done
      - name: Generate PHAPI Spreadsheet
        env:
          GITHUB_TOKEN_USERNAME: ${{ secrets.BUILD_GITHUB_USERNAME }}
          GITHUB_TOKEN: ${{ secrets.BUILD_GITHUB_TOKEN }}
        run: |
          echo "Building PHAPI spreadsheet..."
          export RESOURCES=AllergyIntolerance,Appointment,Condition,DiagnosticReport,Device,DeviceRequest,DocumentReference,Encounter,Immunization,MedicationOrder,MedicationStatement,Observation,Procedure
          export OUTPUT_FILE=health-test-patient-data.xlsx
          ${GITHUB_WORKSPACE}/synthetic-records/minimart-manager/summary-xlsx.sh
          mkdir -p ${GITHUB_WORKSPACE}/consumer-docs/patient-health-v0
          mv ${GITHUB_WORKSPACE}/synthetic-records/health-test-patient-data.xlsx \
            ${GITHUB_WORKSPACE}/consumer-docs/patient-health-v0/health-test-patient-data.xlsx
          cd ${GITHUB_WORKSPACE}/consumer-docs
          git add patient-health-v0/health-test-patient-data.xlsx
      - name: Generate H3CAPI Spreadsheet
        env:
          GITHUB_TOKEN_USERNAME: ${{ secrets.BUILD_GITHUB_USERNAME }}
          GITHUB_TOKEN: ${{ secrets.BUILD_GITHUB_TOKEN }}
        run: |
          echo "Building H3CAPI spreadsheet..."
          export RESOURCES=Account,ChargeItem,Encounter,Invoice,PaymentReconciliation
          export OUTPUT_FILE=health-care-costs-coverage-v0-test-patient-data.xlsx
          ${GITHUB_WORKSPACE}/synthetic-records/minimart-manager/summary-xlsx.sh
          mkdir -p ${GITHUB_WORKSPACE}/consumer-docs/health-care-costs-coverage-v0
          mv ${GITHUB_WORKSPACE}/synthetic-records/health-care-costs-coverage-v0-test-patient-data.xlsx \
            ${GITHUB_WORKSPACE}/consumer-docs/health-care-costs-coverage-v0/health-care-costs-coverage-v0-test-patient-data.xlsx
          cd ${GITHUB_WORKSPACE}/consumer-docs
          git add health-care-costs-coverage-v0/health-care-costs-coverage-v0-test-patient-data.xlsx
      - name: Upload Spreadsheets
        env:
          BRANCH_NAME: ${{ github.ref_name }}
        run: |
          if [ ! "true" == "${RELEASE:-false}" ]
          then
            echo "Not a release build, skipping upload of spreadsheets"
            exit 0
          fi
          git config user.name libertybot
          git config user.email "<none>"
          CHANGES=$(git status --untracked-files=no --porcelain)
          if [ -z "${CHANGES:-}" ]
          then
            echo "No changes"
            exit 0
          fi
          echo "Pushing updated spreadsheets"
          git commit -m "Updated test data spreadsheets"
          git push -u origin ${BRANCH_NAME}
